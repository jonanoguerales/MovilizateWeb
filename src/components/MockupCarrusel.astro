---
const images = [
  "/imgPlanes/imagen1.jpg",
  "/imgPlanes/imagen2.jpg",
  "/imgPlanes/imagen3.jpg",
  "/imgPlanes/imagen4.jpg",
  "/imgPlanes/imagen5.jpg",
  "/imgPlanes/imagen6.jpg",
  "/imgPlanes/imagen7.jpg",
];
---

<div class="relative w-[320px] h-[650px]">
  <!-- Mockup del iPhone -->
  <img
    src="/mockup-iphone.png"
    alt="Mockup del iPhone"
    class="absolute inset-0 w-[93%] h-full z-10 pointer-events-none"
    style="left: 12px !important;"
  />

  <!-- Contenedor del carrusel -->
  <div
    id="image-slider"
    class="absolute inset-0 rounded-[75px] pt-4 pb-1 overflow-hidden"
  >
    {
      images.map((image, index) => (
        <img
          src={image}
          alt={`Imagen ${index + 1}`}
          class={`absolute w-full h-full object-contain transition-transform duration-1000 ease-in-out ${
            index === 0 ? "translate-x-0" : "translate-x-full"
          }`}
          style="top: 0; left: 0;padding-top: 1rem;padding-bottom: 0.25rem;"
        />
      ))
    }
  </div>
</div>

<script>
  const images = [
    "/imgPlanes/imagen1.jpg",
    "/imgPlanes/imagen2.jpg",
    "/imgPlanes/imagen3.jpg",
    "/imgPlanes/imagen4.jpg",
    "/imgPlanes/imagen5.jpg",
    "/imgPlanes/imagen6.jpg",
    "/imgPlanes/imagen7.jpg",
  ];

  const slideDuration = 4000; // Tiempo entre cambios de imagen
  let currentIndex = 0;
  let touchStartX = 0;
  let touchEndX = 0;

  document.addEventListener("DOMContentLoaded", () => {
    const slider = document.getElementById("image-slider");
    const slides = slider?.querySelectorAll("img");

    if (!slider || slides?.length === 0) {
      console.error(
        "No se encontró el contenedor del carrusel o las imágenes."
      );
      return;
    }

    // Cambiar automáticamente entre imágenes
    const interval = setInterval(() => {
      changeSlide("next");
    }, slideDuration);

    // Detectar eventos de touch para swipe
    slider.addEventListener("touchstart", (e) => {
      touchStartX = e.changedTouches[0].screenX;
    });

    slider.addEventListener("touchend", (e) => {
      touchEndX = e.changedTouches[0].screenX;
      handleSwipe();
    });

    // Detectar eventos de mouse (para soporte de arrastrar en escritorio)
    let isMouseDown = false;
    let startX = 0;

    slider.addEventListener("mousedown", (e) => {
      isMouseDown = true;
      startX = e.clientX;
    });

    slider.addEventListener("mouseup", (e) => {
      if (isMouseDown) {
        const swipeDistance = e.clientX - startX;
        if (swipeDistance > 50) changeSlide("prev");
        if (swipeDistance < -50) changeSlide("next");
      }
      isMouseDown = false;
    });

    // Función para manejar el swipe
    const handleSwipe = () => {
      const swipeDistance = touchEndX - touchStartX;

      if (swipeDistance > 50) {
        changeSlide("prev");
      } else if (swipeDistance < -50) {
        changeSlide("next");
      }
    };

    // Función para cambiar de imagen
    const changeSlide = (direction) => {
      slides?.[currentIndex].classList.remove("translate-x-0");
      slides?.[currentIndex].classList.add(
        direction === "next" ? "-translate-x-full" : "translate-x-full"
      );

      currentIndex =
        direction === "next"
          ? (currentIndex + 1) % images.length
          : (currentIndex - 1 + images.length) % images.length;

      slides?.[currentIndex].classList.remove(
        direction === "next" ? "translate-x-full" : "-translate-x-full"
      );
      slides?.[currentIndex].classList.add("translate-x-0");
    };
  });
</script>
